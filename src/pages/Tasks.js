import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import axios from "../api/axios";
import { getToken } from "../utils/auth";

function Tasks() {
  const [tasks, setTasks] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    const fetchTasks = async () => {
      try {
        const response = await axios.get("/tasks", {
          headers: {
            Authorization: `Bearer ${getToken()}`,
          },
        });

        setTasks(response.data.data || []);
      } catch (err) {
        // โ ุงุทุจุน ุงูุฎุทุฃ ุงููุงูู ุฅุฐุง ููุฌูุฏ
        console.error("โ ูุดู ุฌูุจ ุงูููุงู:", err.response?.data || err.message);
        setError("ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูููุงู.");
      } finally {
        setLoading(false);
      }
    };

    fetchTasks();
  }, []);

  return (
    <div>
      <div className="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
        <h2 className="text-2xl font-bold text-gray-800 dark:text-white">
          ูุงุฆูุฉ ุงูููุงู
        </h2>
        <Link
          to="/tasks/new"
          className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition"
        >
          + ุฅุถุงูุฉ ูููุฉ
        </Link>
      </div>

      {/* ุงูููุงุชุฑ (ูุณุชูุจููุง ูููู ุฑุจุทูุง ุจุงูู API) */}
      <div className="mb-4 flex flex-wrap gap-4">
        <select className="p-2 rounded border dark:bg-gray-700 dark:text-white">
          <option>ูู ุงูุญุงูุงุช</option>
          <option>ููุฏ ุงูุงูุชุธุงุฑ</option>
          <option>ููุฏ ุงูุชูููุฐ</option>
          <option>ููุชููุฉ</option>
          <option>ุนุงููุฉ</option>
          <option>ููุบุงุฉ</option>
        </select>
      </div>

      {/* ุชุญููู ุฃู ุฎุทุฃ */}
      {loading && (
        <p className="text-center text-gray-500">ุฌุงุฑู ุชุญููู ุงูููุงู...</p>
      )}
      {error && <p className="text-center text-red-600">{error}</p>}

      {/* ูุงุฆูุฉ ุงูููุงู */}
      <div className="grid gap-4">
        {!loading && tasks.length === 0 ? (
          <p className="text-center text-gray-600 dark:text-gray-300">
            ูุง ุชูุฌุฏ ููุงู ุญุงููุงู.
          </p>
        ) : (
          tasks.map((task) => (
            <Link
              to={`/tasks/${task.id}`}
              key={task.id}
              className="p-4 bg-white dark:bg-gray-800 shadow rounded border flex justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition cursor-pointer"
            >
              {/* โ ุงููุณู ุงูุฃููู: ุงูุนููุงู ูุงููุตู */}
              <div className="flex-1 pr-4 text-right">
                <h3 className="text-lg font-semibold text-blue-600 dark:text-blue-400">
                  {task.title}
                </h3>
                <p className="text-sm text-gray-600 dark:text-gray-300 mt-1 line-clamp-2">
                  {task.description || "ุจุฏูู ูุตู"}
                </p>
              </div>

              {/* โ ุงููุณู ุงูุฃูุณุฑ: ุงูุฃููููุฉ + ุงูุญุงูุฉ + ุงูุญุฐู */}
              <div className="flex flex-col items-start gap-2 min-w-[100px]">
                {/* ุงูุฃููููุฉ */}
                <span className="text-xs font-medium px-2 py-1 rounded-full bg-yellow-100 text-yellow-800 dark:bg-yellow-700 dark:text-yellow-100">
                  {task.priority === 0
                    ? "ููุฎูุถุฉ"
                    : task.priority === 1
                    ? "ูุชูุณุทุฉ"
                    : "ูุฑุชูุนุฉ"}
                </span>

                {/* ุงูุญุงูุฉ */}
                <span className="text-xs font-medium px-2 py-1 rounded-full bg-gray-200 text-gray-800 dark:bg-gray-600 dark:text-white">
                  {task.status}
                </span>

                {/* ุฒุฑ ุงูุญุฐู */}
                <button
                  className="text-sm text-red-600 hover:underline mt-2 self-start"
                  onClick={async (e) => {
                    e.preventDefault(); // ููุน ุงูุงูุชูุงู ุนูุฏ ุงูุถุบุท ุนูู ุงูุฒุฑ

                    const confirmDelete = window.confirm(
                      "ูู ุฃูุช ูุชุฃูุฏ ูู ุญุฐู ุงููููุฉุ"
                    );
                    if (!confirmDelete) return;

                    try {
                      const response = await fetch(
                        `https://task-management-api.alwakkaa.com/tasks/${task.id}/delete`,
                        {
                          method: "DELETE",
                        }
                      );

                      if (!response.ok) {
                        throw new Error("ูุดู ูู ุญุฐู ุงููููุฉ");
                      }

                      // โ ุญุฐู ุงููููุฉ ูู ุงููุงุฌูุฉ
                      setTasks((prev) => prev.filter((t) => t.id !== task.id));
                      console.log("๐๏ธ ุชู ุญุฐู ุงููููุฉ:", task.id);
                    } catch (error) {
                      console.error("โ ูุดู ุงูุญุฐู:", error);
                      alert("ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุญุฐู");
                    }
                  }}
                >
                  ุญุฐู
                </button>
              </div>
            </Link>
          ))
        )}
      </div>
    </div>
  );
}

export default Tasks;
